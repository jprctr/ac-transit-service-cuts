{"version":3,"sources":["TransitMap/index.js","App.js","serviceWorker.js","index.js"],"names":["rename","manualLabelPlacement","serviceChanges","serviceChangeData","map","change","line","trim","noRouteFeatures","filter","toLowerCase","includes","route","changes","unused","acTransitRoutes","Winter19Routeshape","features","f","properties","PUB_RTE","find","r","push","routeGeoBounds","geoBounds","overlapping","box1","box2","x2","x1","y1","y2","hexToRgb","hex","result","exec","parseInt","getRectDimensions","position","rectWidth","rectHeight","TransitMap","props","changeType","selected","visibleGroups","colorScale","orderScale","setSearchValue","clearSelected","useState","tooltipData","setTooltipData","useDimensions","ref","x","y","width","height","defaultViewState","useMemo","viewState","fitBounds","bounds","padding","bearing","pitch","routes","labelPositions","sortBy","scaleKey","color","order","geometry","Math","max","length","flatCoordinates","flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","coordinates","Infinity","start","usedPositon","lp","splice","pos","console","log","labelPos","displayRoutes","routesByGroup","group","from","key","values","updateTooltip","datum","fromMap","status","area","description","clearSelection","hoverLine","target","object","useEffect","textLayers","TextLayer","id","data","pickable","getText","getPosition","opacity","getColor","backgroundColor","sizeMinPixels","sizeMaxPixels","fontFamily","fontWeight","sizeUnits","sizeScale","parameters","depthTest","onHover","highlightLayers","GeoJsonLayer","stroked","filled","lineJointRounded","lineWidthMinPixels","lineWidthMaxPixels","getLineWidth","getFillColor","getLineColor","layers","className","pickingRadius","initialViewState","controller","getCursor","ContextProvider","MapContext","Provider","mapStyle","mapboxApiAccessToken","process","preventStyleDiffing","reuseMaps","showCompass","style","borderColor","onClick","warn","join","typesInOrder","scaleOrdinal","domain","range","isNaN","getSuggestions","value","inputValue","getSuggestionValue","suggestion","App","setValue","searchValue","suggestions","setSuggestions","setVisibleGroups","t","reverse","groups","nextGroups","background","onMouseMove","e","dataset","focusInputOnSuggestionClick","alwaysRenderSuggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderSuggestion","isSelected","data-route","shouldRenderSuggestions","inputProps","placeholder","onChange","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+vvoNAeaA,EAAS,CACpB,EAAK,SAGDC,EAAuB,CAC3B,IAAO,EAAE,WAAY,YAGjBC,EAAiBC,EAAkBC,KAAI,SAAAC,GAI3C,OAHAA,EAAOC,KAAON,EAAOK,EAAOC,OAASD,EAAOC,KAC5CD,EAAO,aAA8C,KAA/BA,EAAO,aAAaE,OAAgB,YAAcF,EAAO,aAC/EA,EAAO,aAA8C,KAA/BA,EAAO,aAAaE,OAAgB,YAAcF,EAAO,aACxEA,KAEHG,EAAkBN,EACrBO,QAAO,SAAAJ,GAAM,OAAIA,EAAOC,KAAKI,cAAcC,SAAS,WACpDP,KAAI,SAAAC,GAAM,MAAK,CACdO,MAAOP,EAAOC,KACdO,QAASR,MAEPS,EAAS,GACTC,EAAkBC,EACxBD,EAAgBE,SAAWF,EAAgBE,SAASb,KAAI,SAAAc,GAMtD,OALAA,EAAEN,MAAQZ,EAAOkB,EAAEC,WAAWC,UAAYF,EAAEC,WAAWC,QACvDF,EAAEL,QAAUX,EAAemB,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,OAASY,EAAEN,SAC7CM,EAAEL,SACLC,EAAOS,KAAKL,EAAEN,OAETM,KAERT,QAAO,SAAAS,GAAC,OAAIA,EAAEL,WACf,IAAMW,EAAiBC,YAAUV,GAYjC,SAASW,EAAYC,EAAMC,GACzB,OAAOD,EAAKE,IAAMD,EAAKE,IAAMH,EAAKG,IAAMF,EAAKC,IAAMF,EAAKI,IAAMH,EAAKI,IAAML,EAAKK,IAAMJ,EAAKG,GAO3F,SAASE,EAASC,GAChB,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACdE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,KAClB,KAGN,SAASG,EAAkBC,EAAUC,EAAWC,GAC9C,MAAO,CACLX,GAAIS,EAAS,GAAKC,EAAY,EAC9BT,GAAIQ,EAAS,GACbV,GAAIU,EAAS,GAAKC,EAAY,EAC9BR,GAAIO,EAAS,GAAKE,GAIP,SAASC,EAAWC,GAAQ,IACjCC,EAA+FD,EAA/FC,WAAYC,EAAmFF,EAAnFE,SAAUC,EAAyEH,EAAzEG,cAAeC,EAA0DJ,EAA1DI,WAAYC,EAA8CL,EAA9CK,WAAYC,EAAkCN,EAAlCM,eAAgBC,EAAkBP,EAAlBO,cAD7C,EAEFC,qBAFE,mBAEjCC,EAFiC,KAEpBC,EAFoB,OAGDC,cAHC,mBAGjCC,EAHiC,YAG1BC,EAH0B,EAG1BA,EAAGC,EAHuB,EAGvBA,EAAGC,EAHoB,EAGpBA,MAAOC,EAHa,EAGbA,OAErBC,EAAmBC,mBAAQ,WAC/B,IAAMC,EAAYC,YAAU,CAC1BC,OAAQxC,EACRkC,MAAOA,GAAS,IAChBC,OAAQA,GAAU,IAClBM,QAAS,KAIX,OAFAH,EAAUI,QAAU,EACpBJ,EAAUK,MAAQ,EACXL,IACN,CAACJ,EAAOC,IAELS,EAASP,mBAAQ,WACrB,IAEMQ,EAAiB,GAEvB,OACEC,IACEA,IACEvD,EAAgBE,SAASb,KAAI,SAAAc,GAI3B,OAHAA,EAAEqD,SAAWrD,EAAEL,QAAUK,EAAEL,QAAQ+B,GAAYrC,OAAS,QACxDW,EAAEsD,MAAQzB,EAAW7B,EAAEqD,UACvBrD,EAAEuD,MAAQzB,EAAW9B,EAAEqD,UAChBrD,MAET,SAAAA,GAAC,OAAKA,EAAEN,UACV,SAAAM,GAAC,OAAIA,EAAEuD,SACRrE,KAAI,SAAAc,GAwBH,OAvBIA,EAAEwD,UAAW,WACf,IAAMlC,EAAYmC,KAAKC,IAjBhB,KACa,EAAI,EADjB,KACa,EAAI,EAgB4B,EAAI1D,EAAEN,MAAMiE,QAC1DC,EApEhB,SAASC,EAASC,GAAa,IAARC,EAAO,uDAAH,EACzB,OAAOA,EAAI,EACPD,EAAIE,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOC,MAAMC,QAAQH,GAAOL,EAASK,EAAKH,EAAI,GAAKG,KAAM,IACtFJ,EAAIQ,QAiEwBT,CAAS7D,EAAEwD,SAASe,YAAYD,QAASE,KACjExE,EAAEyE,MAAQ1F,EAAqBiB,EAAEN,OAASX,EAAqBiB,EAAEN,OAASkE,EAAgBU,MAAM,EAAG,GAInG,IAHA,IAAIjD,EAAWrB,EAAEyE,MACbC,EAAcvB,EAAehD,MAAK,SAAAwE,GAAE,OAAInE,EAAYmE,EAAIvD,EAAkBC,EAAUC,EArBjF,KACa,EAAI,OAeV,aAQZsC,EAAgBgB,OAAO,EAAG,GAC1B,IAAIC,EAAM7E,EAAEyE,MACRb,EAAgBD,QAAU,GAC5BkB,EAAMjB,EAAgBU,MAAM,EAAG,GAC/BI,EAAcvB,EAAehD,MAAK,SAAAwE,GAAE,OAAInE,EAAYmE,EAAIvD,EAAkByD,EAAKvD,EA5B5E,KACa,EAAI,SA6BpBwD,QAAQC,IAAR,mBAAwB/E,EAAEN,QAC1BgF,GAAc,GAEhBrD,EAAWwD,GAVNH,GAAc,IAarBvB,EAAe9C,KAAKe,EAAkBC,EAAUC,EApCzC,KACa,EAAI,IAoCxBtB,EAAEgF,SAAW3D,EArBE,GAuBVrB,OAGV,CAAC0B,EAAYG,EAAYC,IAEtBmD,EAAgBtC,mBAAQ,kBAC5BO,EAAO3D,QAAO,SAAAG,GAAK,OAAIkC,EAAcnC,SAASC,EAAM2D,WAAa3D,EAAM8D,cACtE,CAACN,EAAQtB,IAENsD,EAAgBvC,mBAAQ,kBAxFbzD,EAyFLiG,YAAMF,GAAe,SAAAvF,GAAK,OAAIA,EAAM2D,YAxFzCe,MAAMgB,KAAKlG,GAAK,yCAAoB,CAACmG,IAArB,KAA0BC,OAA1B,SADzB,IAAmBpG,IA0Fd,CAAC+F,IAEEM,EAAgB5C,mBAAQ,kBAC5B,SAAS6C,GAAyB,IAAlBC,EAAiB,wDACvB/F,EAA2C8F,EAA3C9F,MAAO2D,EAAoCmC,EAApCnC,SAAUC,EAA0BkC,EAA1BlC,MAAOC,EAAmBiC,EAAnBjC,MAAO5D,EAAY6F,EAAZ7F,QACjC+F,EAASrC,EACPsC,EAA6BhG,EAA7BgG,KAAMR,EAAuBxF,EAAvBwF,MAAOS,EAAgBjG,EAAhBiG,YACjBH,GACF1D,EAAerC,GAEjByC,EAAe,CACbzC,QACA4D,QACAC,QACAoC,OACAR,QACAS,cACAF,SACAF,MAAOA,EAAMhC,SAAWgC,EAAQ,UAGnC,CAACzD,IAWJ,SAAS8D,IACU,KAAblE,GACFK,IAEEE,GACFC,EAAe,MAInB,SAAS2D,EAAUC,GAAS,IAClBC,EAAWD,EAAXC,OACR,GAAIA,EAAQ,CAAC,IACHtG,EAAUsG,EAAVtG,MACF8F,EAAQtC,EAAO3D,QAAO,SAAAa,GAAC,OAAIwB,EAAcnC,SAASW,EAAEiD,aAAWlD,MAAK,SAAAC,GAAC,OAAIA,EAAEV,QAAUA,KACvF8F,IACGtD,GAAeA,EAAYxC,QAAUA,GACxC6F,EAAcC,GAAO,SAIzBK,IA7BJI,qBAAU,WACR,IAAMT,EAAQtC,EAAO/C,MAAK,SAAAC,GAAC,OAAIA,EAAEV,QAAUiC,KACvC6D,EACFD,EAAcC,GAEdrD,EAAe,QAEhB,CAACoD,EAAe5D,EAAUuB,EAAQZ,EAAGC,IA0BxC,IAAM2D,EAAahB,EAAchG,KAAI,SAAAiG,GACnC,OAAO,IAAIgB,IAAU,CACnBC,GAAG,GAAD,OAAKjB,EAAME,IAAX,4BACFgB,KAAMlB,EAAMG,OACZgB,UAAU,EACVC,QAAS,SAAA7G,GAAK,OAAIA,EAAMA,OACxB8G,YAAa,SAAA9G,GAAK,OAAIA,EAAMsF,UAC5ByB,QAAS9E,EAAW,KAAQ,EAC5B+E,SAAU,CAAC,EAAG,EAAG,GACjBC,gBAAiB5F,EAASc,EAAWsD,EAAME,MAC3CuB,cAAe,EACfC,cAAe,GACfC,WAAY,wBACZC,WAAY,IACZC,UAAW,SACXC,UAAW,GACXC,WAAY,CACVC,WAAW,QAGdhD,OAAOe,EAAchG,KAAI,SAAAiG,GAC1B,OAAO,IAAIgB,IAAU,CACnBC,GAAG,GAAD,OAAKjB,EAAME,IAAX,iBACFgB,KAAMlB,EAAMG,OACZgB,UAAU,EACVc,QAAStB,EACTS,QAAS,SAAA7G,GAAK,OAAIA,EAAMA,OACxB8G,YAAa,SAAA9G,GAAK,OAAIA,EAAMsF,UAC5ByB,QAAS9E,EAAW,KAAQ,EAC5B+E,SAAU,CAAC,IAAK,IAAK,KACrBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAe,EACfC,cAAe,GACfC,WAAY,wBACZC,WAAY,IACZC,UAAW,SACXC,UAAW,GACXC,WAAY,CACVC,WAAW,SAKXE,EAAkBnF,GAAeA,EAAYsD,MAAQ,CACzD,IAAI8B,IAAa,CACflB,GAAG,GAAD,OAAKlE,EAAYsD,MAAMnC,SAAvB,qBACFgD,KAAM,CAACnE,EAAYsD,OACnB+B,SAAS,EACTC,QAAQ,EACRlB,UAAU,EACVmB,kBAAkB,EAClBC,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,GACdC,aAAc,CAAC,EAAG,EAAG,EAAG,KACxBC,aAAc,CAAC,IAAK,IAAK,KACzBZ,WAAY,CACVC,WAAW,KAGf,IAAIG,IAAa,CACflB,GAAG,GAAD,OAAKlE,EAAYsD,MAAMnC,SAAvB,UACFgD,KAAM,CAACnE,EAAYsD,OACnB+B,SAAS,EACTC,QAAQ,EACRlB,UAAU,EACVmB,kBAAkB,EAClBC,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,GACdC,aAAc,CAAC,EAAG,EAAG,EAAG,KACxBC,aAAc,SAAApI,GAAK,OAAIqB,EAASc,EAAWnC,EAAM2D,YACjD6D,WAAY,CACVC,WAAW,KAGf,IAAIhB,IAAU,CACZC,GAAG,GAAD,OAAKlE,EAAYsD,MAAMnC,SAAvB,+BACFgD,KAAM,CAACnE,EAAYsD,OACnBc,UAAU,EACVC,QAAS,SAAA7G,GAAK,OAAIA,EAAMA,OACxB8G,YAAa,SAAA9G,GAAK,OAAIA,EAAMsF,UAC5B0B,SAAU,CAAC,EAAG,EAAG,GACjBC,gBAAiB5F,EAASc,EAAWK,EAAYsD,MAAMnC,WACvDuD,cAAe,GACfC,cAAe,GACfC,WAAY,wBACZC,WAAY,IACZC,UAAW,SACXC,UAAW,GACXC,WAAY,CACVC,WAAW,KAGf,IAAIhB,IAAU,CACZC,GAAG,GAAD,OAAKlE,EAAYsD,MAAMnC,SAAvB,oBACFgD,KAAM,CAACnE,EAAYsD,OACnBc,UAAU,EACVC,QAAS,SAAA7G,GAAK,OAAIA,EAAMA,OACxB8G,YAAa,SAAA9G,GAAK,OAAIA,EAAMsF,UAC5B0B,SAAU,CAAC,IAAK,IAAK,KACrBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAe,GACfC,cAAe,GACfC,WAAY,wBACZC,WAAY,IACZC,UAAW,SACXC,UAAW,GACXC,WAAY,CACVC,WAAW,MAGb,GAEEY,EAAM,CACV,IAAIT,IAAa,CACflB,GAAI,SACJC,KAAMpB,EACNsC,SAAS,EACTC,QAAQ,EACRlB,UAAU,EACVmB,kBAAkB,EAClBC,mBAAoB,IACpBC,mBAAoB,EACpBlB,QAAS9E,EAAW,KAAQ,EAC5BiG,aAAc,GACdC,aAAc,CAAC,EAAG,EAAG,GACrBC,aAAc,SAAApI,GAAK,OAAIqB,EAASc,EAAWnC,EAAM2D,YACjD+D,QAAStB,EACToB,WAAY,CACVC,WAAW,MAhBL,mBAmBPjB,GACAmB,GAGL,OACE,yBAAKhF,IAAKA,EAAK2F,UAAU,cACvB,kBAAC,IAAD,CACED,OAAQA,EACRE,cAAe,EACfC,iBAAkBxF,EAClByF,YAAY,EACZC,UAAW,kBAAMlG,EAAc,UAAY,QAC3CmG,gBAAiBC,IAAWC,UAE5B,kBAAC,IAAD,CACEC,SAAS,mDACTC,qBAAsBC,2FACtBC,qBAAqB,EACrBC,WAAS,IAEX,yBAAKZ,UAAU,qBACb,kBAAC,IAAD,CAAmBa,aAAa,MAGpC,yBACEb,UAAU,UACVc,MAAO,CAAEC,YAAa7G,EAAcA,EAAYoB,MAAQ,QAASmD,QAASvE,EAAc,EAAI,IAE5F,yBAAK8F,UAAU,eACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,8BACG9F,EAAcA,EAAYxC,MAAQ,KAGvC,yBAAKsI,UAAU,cACb,8BACG9F,EAAcA,EAAYyD,KAAO,MAIxC,yBAAKqC,UAAU,OACb,yBAAKA,UAAU,eACb,8BACG9F,EAAcA,EAAYwD,OAAS,KAGxC,yBAAKsC,UAAU,eACb,8BACG9F,EAAcA,EAAYiD,MAAQ,OAK3C,yBAAK6C,UAAU,gBACb,yBAAKA,UAAU,mBACb,6BACE,8BACG9F,EAAcA,EAAY0D,YAAc,OAKjD,yBACEoC,UAAU,QACVc,MAAO,CAAEC,YAAa7G,EAAcA,EAAYoB,MAAQ,SACxD0F,QAASnD,GAET,qCA1WVhG,EAAgBE,SAAWF,EAAgBE,SAASoE,OAAO7E,GAE3DwF,QAAQmE,KAAR,8BAAoCrJ,EAAOsJ,KAAK,Q,WCtC1CC,EAAe,CAAC,QAAS,YAAa,YAAa,WAAY,UAAW,cAE1EtH,EAAauH,cAChBC,OAAOF,GACPG,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,YAE3DxH,EAAasH,cAChBC,OAAOF,GACPG,MAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGnBpG,EAASE,IACbA,IACEpE,EAAeE,KAAI,SAAAQ,GAMjB,OALAA,EAAMA,MAAQZ,EAAOY,EAAMN,OAASM,EAAMN,KAC1CM,EAAM2D,SAAW3D,EALJ,aAKsBL,OACnCK,EAAM2D,SAA8B,KAAnB3D,EAAM2D,SAAkB,YAAc3D,EAAM2D,SAC7D3D,EAAM4D,MAAQzB,EAAWnC,EAAM2D,UAC/B3D,EAAM6D,MAAQzB,EAAWpC,EAAM2D,UACxB3D,KACNH,QAAO,SAAAJ,GAAM,MAAoB,iBAAhBA,EAAOC,SAC5B,SAAAgB,GAAC,OAAImJ,MAAMpI,SAASf,EAAEV,QAAUU,EAAEV,MAAQyB,SAASf,EAAEV,WACvD,SAAAU,GAAC,OAAKA,EAAEmD,SAEHiG,EAAiB,SAACC,EAAO7H,GAC7B,IAAM8H,EAAaD,EAAMpK,OAAOG,cAEhC,OAAuB,IADHkK,EAAW/F,OACJT,EAASA,EAAO3D,QAAO,SAAAG,GAAK,OAAIA,EAAMA,MAAMF,cAAcC,SAASiK,OAG1FC,EAAqB,SAAAC,GAAU,OAAIA,EAAWlK,OAoHrCmK,MAlHf,WAAgB,IAAD,EACa5H,mBAAS,IADtB,mBACNwH,EADM,KACCK,EADD,OAEyB7H,mBAAS,IAFlC,mBAEN8H,EAFM,KAEOhI,EAFP,OAGyBE,mBAASiB,GAHlC,mBAGN8G,EAHM,KAGOC,EAHP,OAI6BhI,mBAASkH,GAJtC,mBAINvH,EAJM,KAISsI,EAJT,OAKY9H,cALZ,mBAKNC,EALM,KAKCG,EALD,KAKCA,MA0Cd,OAxCAyD,qBAAU,WACR6D,EAASC,GACTE,EAAeT,EAAeO,MAC7B,CAACA,EAAanI,IAsCf,yBAAKS,IAAKA,EAAK2F,UAAU,OACvB,yBAAKA,UAAU,SACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,SAAf,oCAGA,yBAAKA,UAAU,YAAf,6BAIF,yBAAKA,UAAU,UACZmB,EAAa5J,QAAO,SAAA4K,GAAC,MAAU,UAANA,KAAeC,UAAUlL,KAAI,SAAAiL,GAAC,OACtD,yBACE9E,IAAK8E,EACLnC,UAAU,OACVgB,QAAS,kBA7CC5C,EA6CkB+D,OA5CtCD,GAAiB,SAAAG,GACf,GAAIA,EAAO5K,SAAS2G,GAAK,CACvB,IAAMkE,EAAaD,EAAO/F,QAAQ/E,QAAO,SAAA4F,GAAK,OAAIA,IAAUiB,KAC5D,OAAOkE,EAAW3G,OAAS2G,EAAa,GAExC,OAAOD,EAAOlG,OAAO,CAACiC,OAN5B,IAAsBA,GA8CV0C,MAAO,CAAErC,QAAS7E,EAAcnC,SAAS0K,GAAK,EAAI,MAElD,yBAAKnC,UAAU,SAASc,MAAO,CAAEyB,WAAY1I,EAAWsI,MACxD,yBAAKnC,UAAU,SACZmC,QAKT,yBACEnC,UAAU,SACVwC,YAAa,SAAAC,GAAM,IAGT/K,EAFW+K,EAAX1E,OACA2E,QACAhL,MACJA,GACFoK,EAASpK,KAIb,kBAAC,IAAD,CACEiL,6BAA6B,EAC7BC,wBAAyBpI,EAAQ,IACjCwH,YAAaA,EAAYzK,QAAO,SAAAG,GAAK,OAAIkC,EAAcnC,SAASC,EAAM2D,aACtEwH,4BAA6B,gBAAGpB,EAAH,EAAGA,MAAH,OAAeQ,EAAeT,EAAeC,KAC1EqB,4BAA6B,aAC7BnB,mBAAoBA,EACpBoB,iBAAkB,SAAAnB,GAAU,OA9Db,SAACA,GACxB,IAAMoB,EAAapB,EAAWlK,QAAU+J,EACxC,OACE,yBACEzB,UAAS,qBAAgBgD,EAAa,WAAa,IACnDC,aAAYrB,EAAWlK,MACvBoJ,MAAO,CAAEC,YAAaa,EAAWtG,QAEjC,yBAAK0E,UAAU,SACZ4B,EAAWlK,OAEd,yBAAKsI,UAAU,UACZ4B,EAAWvG,WAkDsB0H,CAAiBnB,IACjDsB,wBAAyB,kBAAM,GAC/BC,WAAY,CACVC,YAAa,SACb3B,QACA4B,SAAU,SAACZ,EAAD,OAAMa,EAAN,EAAMA,SAAN,OAAqBxB,EAASwB,SAKhD,kBAAC9J,EAAD,CACEE,WA5HW,YA6HXC,SAAU8H,EACVzH,cA5FN,WACE8H,EAAS,IACT/H,EAAe,IACfkI,EAAeT,EAAe,MA0F1B5H,cAAeA,EACfC,WAAYA,EACZC,WAAYA,EACZC,eAAgBA,MC3IJwJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1H,QAAQ0H,MAAMA,EAAMC,a","file":"static/js/main.c64ff627.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport sortBy from 'lodash.sortby';\nimport { group } from 'd3-array';\nimport { geoBounds } from 'd3-geo';\nimport useDimensions from 'react-use-dimensions';\nimport { StaticMap, NavigationControl, _MapContext as MapContext, } from 'react-map-gl';\nimport { fitBounds } from 'viewport-mercator-project';\nimport DeckGL from '@deck.gl/react';\nimport { GeoJsonLayer, TextLayer } from '@deck.gl/layers';\n\nimport './styles.css';\n\nimport Winter19Routeshape from './Winter19Routeshape.geo.json';\nimport serviceChangeData from './ac-transit-service-cuts.json';\n\nexport const rename = {\n  '1': 'BRT/1',\n};\n\nconst manualLabelPlacement = {\n  'BSD': [-122.271168, 37.804324],\n};\n\nconst serviceChanges = serviceChangeData.map(change => {\n  change.line = rename[change.line] || change.line;\n  change['change-15'] = change['change-15'].trim() === '' ? 'no change' : change['change-15'];\n  change['change-30'] = change['change-30'].trim() === '' ? 'no change' : change['change-30'];\n  return change;\n});\nconst noRouteFeatures = serviceChanges\n  .filter(change => change.line.toLowerCase().includes('flex'))\n  .map(change => ({\n    route: change.line,\n    changes: change,\n  }));\nconst unused = [];\nconst acTransitRoutes = Winter19Routeshape;\nacTransitRoutes.features = acTransitRoutes.features.map(f => {\n  f.route = rename[f.properties.PUB_RTE] || f.properties.PUB_RTE;\n  f.changes = serviceChanges.find(r => r.line === f.route);\n  if (!f.changes) {\n    unused.push(f.route);\n  }\n  return f;\n})\n.filter(f => f.changes); // hiding no info routes for now\nconst routeGeoBounds = geoBounds(acTransitRoutes);\nacTransitRoutes.features = acTransitRoutes.features.concat(noRouteFeatures);\n\nconsole.warn(`no information for: ${unused.join(', ')}`);\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\nfunction flatDeep(arr, d = 1) {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n};\n\nfunction overlapping(box1, box2) {\n  return box1.x2 >= box2.x1 && box1.x1 <= box2.x2 && box1.y1 <= box2.y2 && box1.y2 >= box2.y1;\n}\n\nfunction mapToNest(map) {\n  return Array.from(map, ([key, values]) => ({key, values}));\n}\n\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [\n    parseInt(result[1], 16),\n    parseInt(result[2], 16),\n    parseInt(result[3], 16)\n  ] : null;\n}\n\nfunction getRectDimensions(position, rectWidth, rectHeight) {\n  return {\n    x1: position[0] - rectWidth / 2,\n    y1: position[1],\n    x2: position[0] + rectWidth / 2,\n    y2: position[1] + rectHeight,\n  };\n}\n\nexport default function TransitMap(props) {\n  const { changeType, selected, visibleGroups, colorScale, orderScale, setSearchValue, clearSelected } = props;\n  const [tooltipData, setTooltipData] = useState();\n  const [ref, { x, y, width, height }] = useDimensions();\n\n  const defaultViewState = useMemo(() => {\n    const viewState = fitBounds({\n      bounds: routeGeoBounds,\n      width: width || 100,\n      height: height || 100,\n      padding: 16,\n    });\n    viewState.bearing = 0;\n    viewState.pitch = 0;\n    return viewState;\n  }, [width, height]);\n\n  const routes = useMemo(() => {\n    const size = 0.007;//2; //0.0075; // 0.0072; // min: 0.005;\n    const rectHeight = size / 3 * 4;\n    const labelPositions = [];\n\n    return (\n      sortBy(\n        sortBy(\n          acTransitRoutes.features.map(f => {\n            f.scaleKey = f.changes ? f.changes[changeType].trim() : 'other';\n            f.color = colorScale(f.scaleKey);\n            f.order = orderScale(f.scaleKey);\n            return f;\n          })\n        , f => -f.route)\n      , f => f.order)\n      .map(f => {\n        if (f.geometry) {\n          const rectWidth = Math.max(rectHeight, rectHeight / 2 * f.route.length);\n          const flatCoordinates = flatDeep(f.geometry.coordinates.slice(), Infinity);\n          f.start = manualLabelPlacement[f.route] ? manualLabelPlacement[f.route] : flatCoordinates.slice(0, 2);\n          let position = f.start;\n          let usedPositon = labelPositions.find(lp => overlapping(lp, getRectDimensions(position, rectWidth, rectHeight)));\n\n          while (usedPositon) {\n            flatCoordinates.splice(0, 2);\n            let pos = f.start;\n            if (flatCoordinates.length >= 2) {\n              pos = flatCoordinates.slice(0, 2);\n              usedPositon = labelPositions.find(lp => overlapping(lp, getRectDimensions(pos, rectWidth, rectHeight)));\n            } else {\n              console.log(`default: ${f.route}`);\n              usedPositon = false;\n            }\n            position = pos;\n          }\n\n          labelPositions.push(getRectDimensions(position, rectWidth, rectHeight));\n          f.labelPos = position;\n        }\n        return f;\n      })\n    );\n  }, [changeType, colorScale, orderScale]);\n\n  const displayRoutes = useMemo(() => (\n    routes.filter(route => visibleGroups.includes(route.scaleKey) && route.geometry)\n  ), [routes, visibleGroups]);\n\n  const routesByGroup = useMemo(() => (\n    mapToNest(group(displayRoutes, route => route.scaleKey))\n  ), [displayRoutes]);\n\n  const updateTooltip = useMemo(() => (\n    function(datum, fromMap = false) {\n      const { route, scaleKey, color, order, changes } = datum;\n      const status = scaleKey;\n      const { area, group, description } = changes;\n      if (fromMap) {\n        setSearchValue(route);\n      }\n      setTooltipData({\n        route,\n        color,\n        order,\n        area,\n        group,\n        description,\n        status,\n        datum: datum.geometry ? datum : null,\n      });\n    }\n  ), [setSearchValue]);\n\n  useEffect(() => {\n    const datum = routes.find(r => r.route === selected);\n    if (datum) {\n      updateTooltip(datum);\n    } else {\n      setTooltipData(null);\n    }\n  }, [updateTooltip, selected, routes, x, y ]);\n\n  function clearSelection() {\n    if (selected !== '') {\n      clearSelected();\n    }\n    if (tooltipData) {\n      setTooltipData(null);  \n    }\n  }\n\n  function hoverLine(target) {\n    const { object } = target;\n    if (object) {\n      const { route } = object;\n      const datum = routes.filter(r => visibleGroups.includes(r.scaleKey)).find(r => r.route === route);\n      if (datum) {\n        if (!tooltipData || tooltipData.route !== route) {\n          updateTooltip(datum, true);\n        }\n      }\n    } else {\n      clearSelection();\n    }\n  }\n\n  const textLayers = routesByGroup.map(group => {      \n    return new TextLayer({\n      id: `${group.key}-route-labels-background`,\n      data: group.values,\n      pickable: false,\n      getText: route => route.route,\n      getPosition: route => route.labelPos,\n      opacity: selected ? 0.025 : 1,\n      getColor: [0, 0, 0],\n      backgroundColor: hexToRgb(colorScale(group.key)),\n      sizeMinPixels: 0,\n      sizeMaxPixels: 28, //30,\n      fontFamily: 'Fira Sans, sans-serif',\n      fontWeight: 500,\n      sizeUnits: 'meters',\n      sizeScale: 36,\n      parameters: {\n        depthTest: false,\n      },\n    });\n  }).concat(routesByGroup.map(group => {      \n    return new TextLayer({\n      id: `${group.key}-route-labels`,\n      data: group.values,\n      pickable: true,\n      onHover: hoverLine,\n      getText: route => route.route,\n      getPosition: route => route.labelPos,\n      opacity: selected ? 0.025 : 1,\n      getColor: [255, 255, 255],\n      backgroundColor: [18, 18, 18],\n      sizeMinPixels: 0,\n      sizeMaxPixels: 24,\n      fontFamily: 'Fira Sans, sans-serif',\n      fontWeight: 500,\n      sizeUnits: 'meters',\n      sizeScale: 32,\n      parameters: {\n        depthTest: false,\n      },\n    });\n  }));\n\n  const highlightLayers = tooltipData && tooltipData.datum ? [\n    new GeoJsonLayer({\n      id: `${tooltipData.datum.scaleKey}-route-background`,\n      data: [tooltipData.datum],\n      stroked: true,\n      filled: false,\n      pickable: false,\n      lineJointRounded: true, \n      lineWidthMinPixels: 4,\n      lineWidthMaxPixels: 16,\n      getLineWidth: 12,\n      getFillColor: [0, 0, 0, 255],\n      getLineColor: [255, 255, 255],\n      parameters: {\n        depthTest: false,\n      },\n    }),\n    new GeoJsonLayer({\n      id: `${tooltipData.datum.scaleKey}-route`,\n      data: [tooltipData.datum],\n      stroked: true,\n      filled: false,\n      pickable: false,\n      lineJointRounded: true,\n      lineWidthMinPixels: 2,\n      lineWidthMaxPixels: 12,\n      getLineWidth: 10,\n      getFillColor: [0, 0, 0, 255],\n      getLineColor: route => hexToRgb(colorScale(route.scaleKey)),\n      parameters: {\n        depthTest: false,\n      },\n    }),\n    new TextLayer({\n      id: `${tooltipData.datum.scaleKey}-highlight-label-background`,\n      data: [tooltipData.datum],\n      pickable: false,\n      getText: route => route.route,\n      getPosition: route => route.labelPos,\n      getColor: [0, 0, 0],\n      backgroundColor: hexToRgb(colorScale(tooltipData.datum.scaleKey)),\n      sizeMinPixels: 20,\n      sizeMaxPixels: 36,\n      fontFamily: 'Fira Sans, sans-serif',\n      fontWeight: 500,\n      sizeUnits: 'meters',\n      sizeScale: 45,\n      parameters: {\n        depthTest: false,\n      },\n    }),\n    new TextLayer({\n      id: `${tooltipData.datum.scaleKey}-highlight-label`,\n      data: [tooltipData.datum],\n      pickable: false,\n      getText: route => route.route,\n      getPosition: route => route.labelPos,\n      getColor: [255, 255, 255],\n      backgroundColor: [18, 18, 18],\n      sizeMinPixels: 16,\n      sizeMaxPixels: 32,\n      fontFamily: 'Fira Sans, sans-serif',\n      fontWeight: 500,\n      sizeUnits: 'meters',\n      sizeScale: 40,\n      parameters: {\n        depthTest: false,\n      },\n    }),\n  ] : [];\n\n  const layers = [\n    new GeoJsonLayer({\n      id: 'routes',\n      data: displayRoutes,\n      stroked: true,\n      filled: false,\n      pickable: true,\n      lineJointRounded: true,\n      lineWidthMinPixels: 1.5,\n      lineWidthMaxPixels: 5,\n      opacity: selected ? 0.005 : 1,\n      getLineWidth: 10,\n      getFillColor: [0, 0, 0],\n      getLineColor: route => hexToRgb(colorScale(route.scaleKey)),\n      onHover: hoverLine,\n      parameters: {\n        depthTest: false,\n      },\n    }),\n    ...textLayers,\n    ...highlightLayers,\n  ];\n\n  return (\n    <div ref={ref} className=\"TransitMap\">\n      <DeckGL\n        layers={layers}\n        pickingRadius={8}\n        initialViewState={defaultViewState}\n        controller={true}\n        getCursor={() => tooltipData ? 'pointer' : 'grab'}\n        ContextProvider={MapContext.Provider}\n      >    \n        <StaticMap\n          mapStyle=\"mapbox://styles/jprctr/ckf7hqkbl2caw19nw1abtzh3c\"\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          preventStyleDiffing={true}\n          reuseMaps\n        />\n        <div className=\"navigationControl\">\n          <NavigationControl showCompass={false} />\n        </div>\n      </DeckGL>\n      <div\n        className='tooltip'\n        style={{ borderColor: tooltipData ? tooltipData.color : 'white', opacity: tooltipData ? 1 : 0 }}\n      >\n        <div className='column left'>\n          <div className='row'>\n            <div className='route left'>\n              <span>\n                {tooltipData ? tooltipData.route : ''}\n              </span>\n            </div>\n            <div className='area right'>\n              <span>\n                {tooltipData ? tooltipData.area : ''}\n              </span>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='status left'>\n              <span>\n                {tooltipData ? tooltipData.status : ''}\n              </span>\n            </div>\n            <div className='group right'>\n              <span>\n                {tooltipData ? tooltipData.group : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className='column right'>\n          <div className='row description'>\n            <div>\n              <span>\n                {tooltipData ? tooltipData.description : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div\n          className='close'\n          style={{ borderColor: tooltipData ? tooltipData.color : 'white' }}\n          onClick={clearSelection}\n        >\n          <div>x</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { scaleOrdinal } from 'd3-scale';\nimport sortBy from 'lodash.sortby';\nimport Autosuggest from 'react-autosuggest';\nimport useDimensions from 'react-use-dimensions';\n\nimport TransitMap, { rename } from './TransitMap'\nimport serviceChanges from './TransitMap/ac-transit-service-cuts.json';\n\nimport './App.css';\n\nconst typesInOrder = ['other', 'increased', 'no change', 'modified', 'reduced', 'eliminated'];\n\nconst colorScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range(['#a8aaac', '#008e9b', '#10684e', '#ffc75f', '#ff9671', '#CC0000']);\n\nconst orderScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range([1, 2, 3, 4, 5, 6]);\n\nconst changeType = 'change-30';\nconst routes = sortBy(\n  sortBy(\n    serviceChanges.map(route => {\n      route.route = rename[route.line] || route.line;\n      route.scaleKey = route[changeType].trim();\n      route.scaleKey = route.scaleKey === '' ? 'no change' : route.scaleKey;\n      route.color = colorScale(route.scaleKey);\n      route.order = orderScale(route.scaleKey);\n      return route;\n    }).filter(change => change.line !== '40-duplicate')\n  ,r => isNaN(parseInt(r.route)) ? r.route : parseInt(r.route))\n,r => -r.order);\n\nconst getSuggestions = (value, visibleGroups) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? routes : routes.filter(route => route.route.toLowerCase().includes(inputValue));\n};\n\nconst getSuggestionValue = suggestion => suggestion.route;\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState(routes);\n  const [visibleGroups, setVisibleGroups] = useState(typesInOrder);\n  const [ref, { width }] = useDimensions();\n\n  useEffect(() => {\n    setValue(searchValue);\n    setSuggestions(getSuggestions(searchValue, visibleGroups));\n  }, [searchValue, visibleGroups]);\n\n  function clearSelected() {\n    setValue('');\n    setSearchValue('');\n    setSuggestions(getSuggestions('', visibleGroups));\n  }\n\n  function updateGroups(id) {\n    setVisibleGroups(groups => {\n      if (groups.includes(id)) {\n        const nextGroups = groups.slice().filter(group => group !== id);\n        return nextGroups.length ? nextGroups : [];\n      } else {\n        return groups.concat([id]);\n      }\n    });\n  }\n\n  const renderSuggestion = (suggestion) => {\n    const isSelected = suggestion.route === value;\n    return (\n      <div\n        className={`suggestion ${isSelected ? 'selected' : ''}`}\n        data-route={suggestion.route}\n        style={{ borderColor: suggestion.color }}\n      >\n        <div className='label'>\n          {suggestion.route}\n        </div>\n        <div className='status'>\n          {suggestion.scaleKey}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div ref={ref} className=\"App\">\n      <div className='panel'>\n        <div className='headings'>\n          <div className='title'>\n            Proposed AC Transit Service Cuts \n          </div>\n          <div className='subtitle'>\n            Fall 2020 (30% Scenario)\n          </div>\n        </div>\n        <div className='legend'>\n          {typesInOrder.filter(t => t !== 'other').reverse().map(t => (\n            <div\n              key={t}\n              className='item'\n              onClick={() => updateGroups(t)}\n              style={{ opacity: visibleGroups.includes(t) ? 1 : 0.25 }}\n            >\n              <div className='swatch' style={{ background: colorScale(t) }}/>\n              <div className='label'>\n                {t}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div\n          className='search'\n          onMouseMove={e => {\n            const { target } = e;\n            const { dataset } = target;\n            const { route } = dataset;\n            if (route) {\n              setValue(route);\n            }\n          }}\n        >\n          <Autosuggest\n            focusInputOnSuggestionClick={false}\n            alwaysRenderSuggestions={width > 768}\n            suggestions={suggestions.filter(route => visibleGroups.includes(route.scaleKey))}\n            onSuggestionsFetchRequested={({ value }) => setSuggestions(getSuggestions(value, visibleGroups))}\n            onSuggestionsClearRequested={() => {}}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={suggestion => renderSuggestion(suggestion)}\n            shouldRenderSuggestions={() => true}\n            inputProps={{\n              placeholder: 'Search',\n              value,\n              onChange: (e, { newValue }) => setValue(newValue),\n            }}\n          />\n        </div>\n      </div>\n      <TransitMap\n        changeType={changeType}\n        selected={value}\n        clearSelected={clearSelected}\n        visibleGroups={visibleGroups}\n        colorScale={colorScale}\n        orderScale={orderScale}\n        setSearchValue={setSearchValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}