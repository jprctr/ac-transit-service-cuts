{"version":3,"sources":["TransitMap/index.js","App.js","serviceWorker.js","index.js"],"names":["offsetGroups","name","routes","direction","index","initIndex","unused","acTransitRoutes","feature","Winter19Routeshape","objects","TransitMap","props","colorScale","orderScale","dashScale","useState","tooltipData","setTooltipData","useDimensions","ref","width","height","useMemo","geometry","projection","geoMercator","scale","rotate","translate","path","geoPath","bounds","dx","y1","dy","x","y","getBounds","Math","max","scaleProjection","forEach","g","labelPositions","features","map","f","scaleKey","changes","trim","color","order","dash","center","centroid","getCenter","sort","a","route","reverse","b","i","offsets","filter","group","includes","offset","offsetType","flatCoordinates","flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","coordinates","Infinity","start","find","lp","box","pos","x1","x2","y2","position","labelPos","hoverLine","e","pageX","pageY","target","touches","dataset","status","offsetx","offsety","undefined","displayRoutes","r","key","id","transform","className","stroke","fill","strokeWidth","strokeOpacity","pointerEvents","data-route","data-status","data-color","data-path","data-order","data-offsetx","data-offsety","displayLabels","fillOpacity","cursor","fontSize","textAnchor","minScale","maxScale","showControls","controlsClass","btnClass","onMouseMove","onTouchStart","style","left","top","borderColor","properties","PUB_RTE","serviceChanges","line","push","console","warn","join","typesInOrder","scaleOrdinal","domain","range","App","t","background","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c6d413e.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { feature } from 'topojson';\nimport { geoPath, geoMercator } from 'd3-geo';\nimport useDimensions from 'react-use-dimensions';\nimport { MapInteractionCSS } from 'react-map-interaction';\n\nimport './styles.css';\n\n// Fall20Routeshape // Missing eliminated routes\n// Summer19Routeshape\nimport Winter19Routeshape from './Winter19Routeshape.json';\nimport serviceChanges from './ac-transit-service-cuts.json';\n\nconst offsetGroups = [\n  {\n    name: 'transbay',\n    routes: ['800', '707', '706', '703', '702', '701', 'E', 'Z', 'F', 'FS', 'G', 'CB', 'J', 'L', 'LA', 'NL', 'NX', 'NX1', 'NX2', 'NX4', 'P', 'V', 'W', 'B', 'C', 'H', 'NX3', 'NXC', 'O', 'OX', 'S', 'SB'],\n    direction: [-1, 4],\n    index: 0,\n    initIndex: 0,\n  },\n  {\n    name: 'sanpablo',\n    routes: ['72', '72M', '72R', '802'],\n    direction: [4, 0],\n    index: 0,\n    initIndex: 0,\n  },\n  {\n    name: '46',\n    routes: ['46', '46L'],\n    direction: [0, 4],\n    index: 0,\n    initIndex: 0,\n  },\n];\n\nconst unused = [];\nconst acTransitRoutes = feature(Winter19Routeshape,  Winter19Routeshape.objects.Winter19Routeshape);\nacTransitRoutes.features = acTransitRoutes.features.map(f => {\n  f.route = f.properties.PUB_RTE;\n  f.changes = serviceChanges.find(r => r.line === f.route);\n  if (!f.changes) {\n    unused.push(f.route);\n  }\n  return f;\n})\n.filter(f => f.changes); // hiding no change info routes for now\n\nconsole.warn(`no change information for: ${unused.join(', ')}`);\n\nfunction getCenter(path, geometry) {\n  const [x, y] = path.centroid(geometry);\n  return { x, y };\n};\n\nfunction getBounds(path, geometry) {\n  const bounds = path.bounds(geometry),\n    dx = bounds[1][0] - bounds[0][0],\n    y1 = bounds[0][1],\n    dy = bounds[1][1] - y1,\n    x = (bounds[0][0] + bounds[1][0]) / 2,\n    y = (y1 + bounds[1][1]) / 2;\n  return { dx, dy, x, y };\n};\n\nfunction scaleProjection(geometry, width, height) {\n  const projection = geoMercator().scale(1000).rotate([-11, 0]).translate([width / 2, height / 2]);\n  const path = geoPath().projection(projection);\n  const target = geometry;\n  const { dx, dy, x, y } = getBounds(path, target);\n  const scale = 0.9 / Math.max(dx / width, dy / height) || 1,\n    translate = [width / 2 - scale * x, height / 2 - scale * y];\n  return { projection, path, scale, translate, x, y, dx, dy, };\n};\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\nfunction flatDeep(arr, d = 1) {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n};\n\nfunction inBox(box, pos) {\n  return box.x1 <= pos[0] && pos[0] <= box.x2 && box.y1 <= pos[1] && pos[1] <= box.y2;\n}\n\nexport default function TransitMap(props) {\n  const { colorScale, orderScale, dashScale } = props;\n  const [tooltipData, setTooltipData] = useState();\n  const [ref, { width, height }] = useDimensions();\n\n  const { projection, path, translate, scale } = useMemo(() => (\n    width\n      ? scaleProjection(acTransitRoutes, width, height)\n      : { translate: [0, 0], scale: 0 }\n  ), [width, height]);\n\n  const changeType = 'change-30';\n  \n  const routes = useMemo(() => {\n    offsetGroups.forEach(g => {\n      g.index = g.initIndex;\n    });\n    const labelPositions = [];\n    return width ? (\n      acTransitRoutes.features.map(f => {\n        f.scaleKey = f.changes ? f.changes[changeType].trim() : 'other';\n        f.color = colorScale(f.scaleKey);\n        f.order = orderScale(f.scaleKey);\n        f.dash = dashScale(f.scaleKey);\n        f.path = path(f);\n        f.center = getCenter(path, f);\n        return f;\n      })\n      .sort(a => a.route)\n      .reverse()\n      .sort((a, b) => b.order - a.order)\n      // .reverse()\n      .map((f, i) => {\n        const offsets = offsetGroups.filter(group => group.routes.includes(f.route));\n        if (offsets[0]) {\n          const offset = offsets[0];\n          f.offsetType = offset.name;\n          f.offset = {\n            x: offset.direction[0] * offset.index,\n            y: offset.direction[1] * offset.index,\n          };\n          offset.index++;\n        } else {\n          f.offsetType = 'default';\n          f.offset = {\n            x: 0,\n            y: 0,\n          };\n        }\n\n        // f.labelPos = f.offsetType === 'transbay' ? f.start : [f.center.x, f.center.y];\n        // f.labelPos = f.offsetType === 'transbay' ? ({\n        //     x: f.start[0],\n        //     y: f.start[1],\n        //   }) : f.center;\n\n        const flatCoordinates = flatDeep(f.geometry.coordinates.slice(), Infinity);\n        f.start = projection(flatCoordinates.slice(0, 2));\n        let usedPositon = labelPositions.find(lp => inBox(lp, f.start));\n        let position = f.start;\n\n        // while (usedPositon) {\n        //   flatCoordinates.splice(0, 2);\n        //   let pos = f.start;\n        //   if (flatCoordinates.length) {\n        //     pos = projection(flatCoordinates.slice(0, 2));\n        //     usedPositon = labelPositions.find(lp => inBox(lp, pos)); // \n        //   } else {\n        //     console.log('default');\n        //     console.log(f.route);\n        //     usedPositon = false;\n        //   }\n        //   position = pos;\n        // }\n\n        // const offset = 0.393;\n        // labelPositions.push({\n        //   x1: position[0] - offset,\n        //   y1: position[1],\n        //   x2: position[0] + offset,\n        //   y2: position[1] + offset,\n        // });\n\n        f.labelPos = { x: position[0], y: position[1] };\n\n        return f;\n      })\n    ) : [];\n  }, [width, path, colorScale, orderScale, dashScale, projection]);\n\n  function hoverLine(e) {\n    const { pageX, pageY, target, touches } = e;\n    const { dataset } = target;\n    const { route, status, color, path, order, offsetx, offsety } = dataset;\n    if (route) {\n      if (!tooltipData || tooltipData.route !== route) {\n        const x = pageX !== undefined\n          ? pageX\n          : touches\n            ? touches[0].pageX\n            : 0;\n        const y = pageY !== undefined\n          ? pageY\n          : touches\n            ? touches[0].pageY\n            : 0;\n        setTooltipData({\n          x,\n          y,\n          route,\n          color,\n          path,\n          order,\n          offsetx,\n          offsety,\n          status: status === '' ? 'no change' : status,\n        });\n      }\n    } else {\n      if (tooltipData) {\n        setTooltipData(null);\n      }\n    }\n  }\n\n  const displayRoutes = useMemo(() => (\n    routes.map((r, i) => (\n      <g\n        key={r.route}\n        id={r.route}\n        transform={`translate(${r.offset.x / scale}, ${r.offset.y / scale})`}\n        className='route'\n      >\n        <path\n          className='visible'\n          d={r.path}\n          stroke={r.color}\n          fill='none'\n          // strokeDasharray={`${r.dash / scale} ${r.dash * 2 / scale}`}\n          strokeWidth={1.5 / scale}\n          // strokeOpacity={0.75}\n          strokeOpacity={0.5}\n          pointerEvents='none'\n        />\n        <path\n          className='highlight'\n          d={r.path}\n          stroke={r.color}\n          fill='none'\n          strokeWidth={3 / scale}\n          strokeOpacity='0'\n          data-route={r.route}\n          data-status={r.scaleKey}\n          data-color={r.color}\n          data-path={r.path}\n          data-order={i}\n          data-offsetx={r.offset.x}\n          data-offsety={r.offset.y}\n        />\n      </g>\n    ))\n  ), [routes, scale]);\n\n  const displayLabels = useMemo(() => (\n    routes.map((r, i) => (\n      <g\n      pointerEvents='none'\n        key={`${r.route}-label`}\n        transform={`translate(${r.offset.x / scale}, ${r.offset.y / scale})`}\n      >\n        <g transform={`translate(${r.labelPos.x}, ${r.labelPos.y})`}>\n          <rect\n            x={-12 / scale}\n            width={24 / scale}\n            height={12 / scale}\n            // fill={r.color}\n            fill={'#121212'}\n            stroke={r.color}\n            strokeWidth={1 / scale}\n            fillOpacity={0.75}\n            //\n            //\n            cursor='pointer'\n            pointerEvents='auto'\n            data-route={r.route}\n            data-status={r.scaleKey}\n            data-color={r.color}\n            data-path={r.path}\n            data-order={i}\n            data-offsetx={r.offset.x}\n            data-offsety={r.offset.y}\n            //\n          />\n          <text\n            fill='white'\n            // dx={3 / scale}\n            dy={9 / scale}\n            fontSize={9 / scale}\n            textAnchor='middle'\n            pointerEvents='none'\n          >\n            {r.route}\n          </text>\n        </g>\n      </g>\n    ))\n  ), [routes, scale]);\n\n  return (\n    <div ref={ref} className=\"TransitMap\">\n      <MapInteractionCSS\n        minScale={1}\n        maxScale={10}\n        showControls={true}\n        controlsClass='controls'\n        btnClass='control'\n      >\n        <svg width={width} height={height}>\n          <g transform={`translate(${translate}) scale(${scale})`}>\n            <g onMouseMove={hoverLine} onTouchStart={hoverLine}>\n              {displayRoutes}\n            </g>\n            {tooltipData ? (\n              <g\n                key={`${tooltipData.route}-highlight`}\n                id={`${tooltipData.route}-highlight`}\n                pointerEvents='none'\n                transform={`translate(${tooltipData.offsetx / scale}, ${tooltipData.offsety / scale})`}\n              >\n                <path\n                  d={tooltipData.path}\n                  stroke='white'\n                  fill='none'\n                  strokeWidth={6 / scale}\n                  strokeOpacity='1'\n                />\n                <path\n                  d={tooltipData.path}\n                  stroke={tooltipData.color}\n                  fill='none'\n                  strokeWidth={3 / scale}\n                  strokeOpacity='1'\n                />\n              </g>\n            ) : null}\n            <g onMouseMove={hoverLine} onTouchStart={hoverLine}>\n              {displayLabels}\n            </g>\n          </g>\n        </svg>\n      </MapInteractionCSS>\n      {\n        tooltipData ? (\n          <div\n            className='tooltip'\n            style={{\n              left: tooltipData.x,\n              top: tooltipData.y,\n              borderColor: tooltipData.color,\n            }}\n          >\n            <div className='route'>\n              {tooltipData.route}\n            </div>\n            <div className='status'>\n              {tooltipData.status === '' ? 'no change' : tooltipData.status}\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport { scaleOrdinal } from 'd3-scale';\n\nimport TransitMap from './TransitMap'\n\nimport './App.css';\n\nconst typesInOrder = ['other', 'increased', '', 'modified', 'reduced', 'eliminated'];\n\nconst colorScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range(['#a8aaac', '#008e9b', '#10684e', '#ffc75f', '#ff9671', '#CC0000']);\n\nconst orderScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range([1, 2, 3, 4, 5, 6]);\n\nconst dashScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range([0, 0, 0, 1, 2, 3]);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='panel'>\n        <div className='title'>\n          Proposed AC Transit Service Cuts \n        </div>\n        <div className='subtitle'>\n          Fall 2020 (30% Scenario)\n        </div>\n        <div className='legend'>\n          {typesInOrder.filter(t => t !== 'other').reverse().map(t => (\n            <div key={t} className='item'>\n              <div className='swatch' style={{ background: colorScale(t) }}/>\n              <div className='label'>\n                {t === '' ? 'no change' : t}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <TransitMap\n        colorScale={colorScale}\n        orderScale={orderScale}\n        dashScale={dashScale}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}