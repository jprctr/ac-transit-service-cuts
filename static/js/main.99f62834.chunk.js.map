{"version":3,"sources":["TransitMap/index.js","App.js","serviceWorker.js","index.js"],"names":["thirtyThree","radial","radius","distortion","smoothingRatio","fourtySix","jay","fisheye","coordinate","offsetGroups","manualOffsets","rename","serviceChanges","serviceChangeData","map","change","line","trim","unused","combinedRoutes","feature","CombinedWinter19Routeshape","objects","acTransitRoutes","Winter19Routeshape","overlapping","box1","box2","x2","x1","y1","y2","TransitMap","props","changeType","selected","visibleClassString","colorScale","orderScale","onMouseOver","useState","tooltipData","setTooltipData","useDimensions","ref","x","y","width","height","useMemo","geometry","projection","geoMercator","scale","rotate","translate","path","geoPath","bounds","dx","dy","getBounds","Math","max","scaleProjection","routeBackground","key","id","d","stroke","fill","routes","forEach","g","index","initIndex","focus","labelPositions","sortBy","features","f","scaleKey","changes","color","order","center","centroid","getCenter","route","i","offsets","filter","group","includes","offset","offsetType","name","direction","flatCoordinates","flatDeep","arr","reduce","acc","val","concat","Array","isArray","slice","coordinates","Infinity","start","position","usedPositon","find","lp","splice","pos","length","console","log","push","labelPos","updateTooltip","datum","status","area","description","hoverLine","e","target","dataset","r","useEffect","displayRoutes","transform","className","data-route","strokeWidth","strokeOpacity","pointerEvents","displayLabels","fontScale","scaleLinear","domain","range","clamp","font","floor","min","size","fillOpacity","cursor","fontSize","textAnchor","minScale","maxScale","showControls","controlsClass","btnClass","onClick","onTouchStart","onMouseMove","style","borderColor","opacity","properties","PUB_RTE","warn","join","typesInOrder","scaleOrdinal","isNaN","parseInt","getSuggestionValue","suggestion","App","value","setValue","suggestions","setSuggestions","visibleGroups","setVisibleGroups","t","reverse","groups","nextGroups","background","alwaysRenderSuggestions","onSuggestionsFetchRequested","inputValue","toLowerCase","getSuggestions","onSuggestionsClearRequested","renderSuggestion","isSelected","inputProps","placeholder","onChange","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99f62834.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { feature } from 'topojson';\nimport sortBy from 'lodash.sortby';\nimport { scaleLinear } from 'd3-scale';\nimport { geoPath, geoMercator } from 'd3-geo';\nimport { radial } from 'd3-fisheye';\nimport useDimensions from 'react-use-dimensions';\nimport { MapInteractionCSS } from 'react-map-interaction';\n\nimport './styles.css';\n\n// Fall20Routeshape // Missing eliminated routes\n// Summer19Routeshape\nimport Winter19Routeshape from './Winter19Routeshape.json';\nimport CombinedWinter19Routeshape from './CombinedWinter19Routeshape.json';\nimport serviceChangeData from './ac-transit-service-cuts.json';\n\nconst thirtyThree = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.75);\n\nconst fourtySix = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.75);\n\nconst jay = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.25);\n\nconst fisheye = coordinate => fourtySix(thirtyThree(jay(coordinate)));\n\n// not using for now\nconst offsetGroups = [\n  // {\n  //   name: 'transbay',\n  //   routes: ['800', '707', '706', '703', '702', '701', 'E', 'Z', 'F', 'FS', 'G', 'CB', 'J', 'L', 'LA', 'NL', 'NX', 'NX1', 'NX2', 'NX4', 'P', 'V', 'W', 'B', 'C', 'H', 'NX3', 'NXC', 'O', 'OX', 'S', 'SB'],\n  //   direction: [-2, 4],\n  //   index: 0,\n  //   initIndex: 0,\n  // },\n  // {\n  //   name: 'sanpablo',\n  //   routes: ['72', '72M', '72R', '802'],\n  //   direction: [-4, 0],\n  //   index: 4,\n  //   initIndex: 4,\n  // },\n  // {\n  //   name: '46',\n  //   routes: ['46', '46L'],\n  //   direction: [0, 4],\n  //   index: 0,\n  //   initIndex: 0,\n  // },\n];\n\nconst manualOffsets = {\n  // 'B': { x: -0.25, y: -0.25 },\n  // 'NX1': { x: -0.375, y: 0.125 },\n  // 'NX3': { x: 0.5, y: 0 },\n  // '14': { x: -0.375, y: -0.25 },\n};\n\nexport const rename = {\n  '1': 'BRT/1',\n};\n\nconst serviceChanges = serviceChangeData.map(change => {\n  change.line = rename[change.line] || change.line;\n  change['change-15'] = change['change-15'].trim() === '' ? 'no change' : change['change-15'];\n  change['change-30'] = change['change-30'].trim() === '' ? 'no change' : change['change-30'];\n  return change;\n});\n\nconst unused = [];\nconst combinedRoutes = feature(CombinedWinter19Routeshape, CombinedWinter19Routeshape.objects['1']);\nconst acTransitRoutes = feature(Winter19Routeshape,  Winter19Routeshape.objects.Winter19Routeshape);\nacTransitRoutes.features = acTransitRoutes.features.map(f => {\n  f.route = rename[f.properties.PUB_RTE] || f.properties.PUB_RTE;\n  f.changes = serviceChanges.find(r => r.line === f.route);\n  if (!f.changes) {\n    unused.push(f.route);\n  }\n  return f;\n})\n.filter(f => f.changes); // hiding no info routes for now\nconsole.warn(`no information for: ${unused.join(', ')}`);\n\nfunction getCenter(path, geometry) {\n  const [x, y] = path.centroid(geometry);\n  return { x, y };\n};\n\nfunction getBounds(path, geometry) {\n  const bounds = path.bounds(geometry),\n    dx = bounds[1][0] - bounds[0][0],\n    y1 = bounds[0][1],\n    dy = bounds[1][1] - y1,\n    x = (bounds[0][0] + bounds[1][0]) / 2,\n    y = (y1 + bounds[1][1]) / 2;\n  return { dx, dy, x, y };\n};\n\nfunction scaleProjection(geometry, width, height) {\n  const projection = geoMercator().scale(1000).rotate([-11, 0]).translate([width / 2, height / 2]);\n  const path = geoPath().projection(projection);\n  const target = geometry;\n  const { dx, dy, x, y } = getBounds(path, target);\n  const scale = 0.9 / Math.max(dx / width, dy / height) || 1,\n    translate = [width / 2 - scale * x, height / 2 - scale * y];\n  return { projection, path, scale, translate, x, y, dx, dy, };\n};\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\nfunction flatDeep(arr, d = 1) {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n};\n\nfunction overlapping(box1, box2) {\n  return box1.x2 >= box2.x1 && box1.x1 <= box2.x2 && box1.y1 <= box2.y2 && box1.y2 >= box2.y1;\n}\n\nexport default function TransitMap(props) {\n  const { changeType, selected, visibleClassString, colorScale, orderScale, onMouseOver } = props;\n  const [tooltipData, setTooltipData] = useState();\n  const [ref, { x, y, width, height }] = useDimensions();\n\n  const { projection, path, translate, scale } = useMemo(() => (\n    width\n      ? scaleProjection(acTransitRoutes, width, height)\n      : { translate: [0, 0], scale: 0 }\n  ), [width, height]);\n\n  const routeBackground = useMemo(() => path ? (\n    <path\n      key='routeBackground'\n      id='routeBackground'\n      d={path(combinedRoutes)}\n      stroke='#121212'\n      fill='none'\n    />\n  ) : null, [path]);\n\n  const routes = useMemo(() => {\n    offsetGroups.forEach(g => {\n      g.index = g.initIndex;\n    });\n\n    if (projection) {\n      thirtyThree.focus(projection([ -122.25074308326039, 37.79930415428206 ]));\n      fourtySix.focus(projection([ -122.19203753859007, 37.74994737608997 ]));\n      jay.focus(projection([ -122.39272304308822, 37.7851476342889 ]));\n    }\n\n    const labelPositions = [];\n    return width ? (\n      sortBy(\n        sortBy(\n          acTransitRoutes.features.map(f => {\n            f.scaleKey = f.changes ? f.changes[changeType].trim() : 'other';\n            f.color = colorScale(f.scaleKey);\n            f.order = orderScale(f.scaleKey);\n            f.path = path(f);\n            f.center = getCenter(path, f);\n            return f;\n          })\n        , f => -f.route)\n      , f => f.order)\n      .map((f, i) => {\n        const offsets = offsetGroups.filter(group => group.routes.includes(f.route));\n        if (offsets[0]) {\n          const offset = offsets[0];\n          f.offsetType = offset.name;\n          f.offset = {\n            x: offset.direction[0] * offset.index,\n            y: offset.direction[1] * offset.index,\n          };\n          offset.index++;\n        } else {\n          f.offsetType = 'default';\n          f.offset = {\n            x: 0,\n            y: 0,\n          };\n        }\n\n        const size = 0.18; // 0.19; //0.2; // 0.25;\n        const flatCoordinates = flatDeep(f.geometry.coordinates.slice(), Infinity);\n        f.start = fisheye(projection(flatCoordinates.slice(0, 2)));\n        // f.start = projection(flatCoordinates.slice(-2));\n        f.start[0] += f.offset.x / scale;\n        f.start[1] += f.offset.y / scale;\n        let position = f.start;\n        let usedPositon = labelPositions.find(lp => overlapping(lp, {\n          x1: position[0] - size,\n          y1: position[1],\n          x2: position[0] + size,\n          y2: position[1] + size,\n        }));\n\n        if (manualOffsets[f.route]) {\n          position[0] += manualOffsets[f.route].x;\n          position[1] += manualOffsets[f.route].y;\n          // usedPositon = false;\n        }\n        \n        while (usedPositon) {\n          flatCoordinates.splice(0, 2);\n          let pos = f.start;\n          if (flatCoordinates.length >= 2) {\n            pos = fisheye(projection(flatCoordinates.slice(0, 2)));\n            pos[0] += f.offset.x / scale;\n            pos[1] += f.offset.y / scale;\n            usedPositon = labelPositions.find(lp => overlapping(lp, {\n              x1: pos[0] - size,\n              y1: pos[1],\n              x2: pos[0] + size,\n              y2: pos[1] + size,\n            }));\n          } else {\n            console.log(`default: ${f.route}`);\n            usedPositon = false;\n          }\n          position = pos;\n          if (manualOffsets[f.route]) {\n            position[0] += manualOffsets[f.route].x / scale;\n            position[1] += manualOffsets[f.route].y / scale;\n            // usedPositon = false;\n          }\n        }\n\n        labelPositions.push({\n          x1: position[0] - size,\n          y1: position[1],\n          x2: position[0] + size,\n          y2: position[1] + size,\n        });\n\n        f.labelPos = { x: position[0], y: position[1] };\n\n        return f;\n      })\n    ) : [];\n  }, [changeType, width, path, colorScale, orderScale, projection, scale]);\n\n  function updateTooltip(datum) {\n    const { route, scaleKey, color, path, order, changes } = datum;\n    const status = scaleKey;\n    const { area, group, description } = changes;\n    setTooltipData({\n      route,\n      color,\n      path,\n      order,\n      area,\n      group,\n      description,\n      status,\n    });\n  }\n\n  useEffect(() => {\n    const datum = routes.find(r => r.route === selected);\n    if (datum) {\n      updateTooltip(datum);\n    } else {\n      setTooltipData(null);\n    }\n  }, [selected, routes, x, y ]);\n\n  function hoverLine(e) {\n    const { target } = e;\n    const { dataset } = target;\n    const { route } = dataset;\n    const datum = routes.find(r => r.route === route);\n    if (datum) {\n      if (!tooltipData || tooltipData.route !== route) {\n        updateTooltip(datum);\n      }\n    }\n  }\n\n  const displayRoutes = useMemo(() => (\n    routes.map((r, i) => (\n      <g\n        key={r.route}\n        id={r.route}\n        transform={`translate(${r.offset.x / scale}, ${r.offset.y / scale})`}\n        className={`route ${r.scaleKey}`}\n      >\n        <path\n          data-route={r.route}\n          // \n          // className='visible'\n          className='highlight'\n          d={r.path}\n          stroke={r.color}\n          fill='none'\n          strokeWidth={1.5 / scale}\n          strokeOpacity={0.5}\n          pointerEvents='none'\n        />\n        {\n        // <path\n        //   data-route={r.route}\n        //   className='highlight'\n        //   d={r.path}\n        //   stroke={r.color}\n        //   fill='none'\n        //   strokeWidth={3 / scale}\n        //   strokeOpacity='0'\n        // />\n      }\n      </g>\n    ))\n  ), [routes, scale]);\n\n  const displayLabels = useMemo(() => {\n    const fontScale = scaleLinear()\n    .domain([480, 1440])\n    // .domain([480, 960])\n    // .range([6, 18])\n    // .range([7, 12])\n    .range([7, 14])\n    .clamp(true);\n    const font = Math.floor(fontScale(Math.min(width, height))) || 9;\n    const size = font / 3 * 4;\n    return routes.map((r, i) => (\n      <g\n        pointerEvents='none'\n        className={`${r.scaleKey}`}\n        key={`${r.route}-label`}\n      >\n        <g transform={`translate(${r.labelPos.x}, ${r.labelPos.y})`}>\n          <rect\n            data-route={r.route}\n            className='target'\n            x={-size / scale}\n            width={size * 2 / scale}\n            height={size / scale}\n            fill='#121212'\n            stroke={r.color}\n            strokeWidth={1 / scale}\n            fillOpacity={0.75}\n            cursor='pointer'\n          />\n          <text\n            fill='white'\n            dy={font / scale}\n            fontSize={font / scale}\n            textAnchor='middle'\n            pointerEvents='none'\n          >\n            {r.route === '1' ? '1BRT' : r.route}\n          </text>\n        </g>\n      </g>\n    ))\n  }, [routes, width, height, scale]);\n\n  return (\n    <div ref={ref} className=\"TransitMap\" onMouseOver={onMouseOver}>\n      <MapInteractionCSS\n        minScale={1}\n        maxScale={10}\n        showControls={true}\n        controlsClass='controls'\n        btnClass='control'\n      >\n        <svg className={visibleClassString} width={width} height={height}>\n          <rect\n            width={width}\n            height={height}\n            fill='transparent'\n            onClick={() => tooltipData ? setTooltipData(null) : {}}\n            onTouchStart={() => tooltipData ? setTooltipData(null) : {}}\n            onMouseOver={() => tooltipData ? setTooltipData(null) : {}}\n          />\n          <g transform={`translate(${translate}) scale(${scale})`}>\n            <g onMouseMove={hoverLine} onTouchStart={hoverLine}>\n              {routeBackground}\n              <g className='routes'>\n                {displayRoutes}\n              </g>\n              <g className={`labels ${tooltipData ? 'dim' : ''}`}>\n                {displayLabels}\n              </g>\n            </g>\n            {tooltipData ? (\n              <g\n                key={`${tooltipData.route}-highlight`}\n                id={`${tooltipData.route}-highlight`}\n                className='spotlight'\n                pointerEvents='none'\n              >\n                <path\n                  d={tooltipData.path}\n                  stroke='white'\n                  fill='none'\n                  strokeWidth={6 / scale}\n                  strokeOpacity='1'\n                />\n                <path\n                  d={tooltipData.path}\n                  stroke={tooltipData.color}\n                  fill='none'\n                  strokeWidth={3 / scale}\n                  strokeOpacity='1'\n                />\n              </g>\n            ) : null}\n          </g>\n        </svg>\n      </MapInteractionCSS>\n      <div\n        className='tooltip'\n        style={{ borderColor: tooltipData ? tooltipData.color : 'white', opacity: tooltipData ? 1 : 0 }}\n      >\n        <div className='column left'>\n          <div className='row'>\n            <div className='route left'>\n              <span>\n                {tooltipData ? tooltipData.route : ''}\n              </span>\n            </div>\n            <div className='area right'>\n              <span>\n                {tooltipData ? tooltipData.area : ''}\n              </span>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='status left'>\n              <span>\n                {tooltipData ? tooltipData.status : ''}\n              </span>\n            </div>\n            <div className='group right'>\n              <span>\n                {tooltipData ? tooltipData.group : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className='column right'>\n          <div className='row description'>\n            <div>\n              <span>\n                {tooltipData ? tooltipData.description : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div\n          className='close'\n          style={{ borderColor: tooltipData ? tooltipData.color : 'white' }}\n          onClick={() => setTooltipData(null)}\n        >\n          <div>x</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { scaleOrdinal } from 'd3-scale';\nimport sortBy from 'lodash.sortby';\nimport Autosuggest from 'react-autosuggest';\nimport useDimensions from 'react-use-dimensions';\n\nimport TransitMap, { rename } from './TransitMap'\nimport serviceChanges from './TransitMap/ac-transit-service-cuts.json';\n\nimport './App.css';\n\nconst typesInOrder = ['other', 'increased', 'no change', 'modified', 'reduced', 'eliminated'];\n\nconst colorScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range(['#a8aaac', '#008e9b', '#10684e', '#ffc75f', '#ff9671', '#CC0000']);\n\nconst orderScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range([1, 2, 3, 4, 5, 6]);\n\nconst changeType = 'change-30';\nconst routes = sortBy(\n  sortBy(\n    serviceChanges.map(route => {\n      route.route = rename[route.line] || route.line;\n      route.scaleKey = route[changeType].trim();\n      route.scaleKey = route.scaleKey === '' ? 'no change' : route.scaleKey;\n      route.color = colorScale(route.scaleKey);\n      route.order = orderScale(route.scaleKey);\n      return route;\n    }).filter(change => change.line !== '40-duplicate')\n  ,r => isNaN(parseInt(r.route)) ? r.route : parseInt(r.route))\n,r => -r.order);\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? routes : routes.filter(route => route.route.toLowerCase().includes(inputValue));\n};\n\nconst getSuggestionValue = suggestion => suggestion.route;\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState(routes);\n  const [visibleGroups, setVisibleGroups] = useState(typesInOrder);\n  const [ref, { width }] = useDimensions();\n\n  function updateGroups(id) {\n    setVisibleGroups(groups => {\n      if (groups.includes(id)) {\n        const nextGroups = groups.slice().filter(group => group !== id);\n        return nextGroups.length ? nextGroups : [];\n      } else {\n        return groups.concat([id]);\n      }\n    });\n  }\n\n  const renderSuggestion = (suggestion) => {\n    const isSelected = suggestion.route === value;\n    return (\n      <div\n        className={`suggestion ${isSelected ? 'selected' : ''}`}\n        data-route={suggestion.route}\n        style={{ borderColor: suggestion.color }}\n      >\n        <div className='label'>\n          {suggestion.route}\n        </div>\n        <div className='status'>\n          {suggestion.scaleKey}\n        </div>\n      </div>\n    );\n  };\n\n  const visibleClassString = visibleGroups.join(' ');\n\n  return (\n    <div ref={ref} className=\"App\">\n      <div className='panel'>\n        <div className='title'>\n          Proposed AC Transit Service Cuts \n        </div>\n        <div className='subtitle'>\n          Fall 2020 (30% Scenario)\n        </div>        \n        <div className='legend'>\n          {typesInOrder.filter(t => t !== 'other').reverse().map(t => (\n            <div\n              key={t}\n              className='item'\n              onClick={() => updateGroups(t)}\n              style={{ opacity: visibleGroups.includes(t) ? 1 : 0.25 }}\n            >\n              <div className='swatch' style={{ background: colorScale(t) }}/>\n              <div className='label'>\n                {t}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div\n          className='search'\n          onMouseMove={e => {\n            const { target } = e;\n            const { dataset } = target;\n            const { route } = dataset;\n            if (route) {\n              setValue(route);\n            }\n          }}\n        >\n          <Autosuggest\n            alwaysRenderSuggestions={width > 768}\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={({ value }) => setSuggestions(getSuggestions(value))}\n            onSuggestionsClearRequested={() => setSuggestions(routes)}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={suggestion => renderSuggestion(suggestion)}\n            inputProps={{\n              placeholder: 'Search',\n              value,\n              onChange: (e, { newValue }) => setValue(newValue),\n            }}\n          />\n        </div>\n      </div>\n      <TransitMap\n        changeType={changeType}\n        selected={value}\n        visibleClassString={visibleClassString}\n        colorScale={colorScale}\n        orderScale={orderScale}\n        onMouseOver={() => setValue('')}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}