{"version":3,"sources":["TransitMap/index.js","App.js","serviceWorker.js","index.js"],"names":["thirtyThree","radial","radius","distortion","smoothingRatio","fourtySix","jay","fisheye","coordinate","offsetGroups","manualOffsets","rename","serviceChanges","serviceChangeData","map","change","line","trim","noRouteFeatures","filter","toLowerCase","includes","route","changes","unused","combinedRoutes","feature","RouteBackground","objects","acTransitRoutes","Winter19Routeshape","overlapping","box1","box2","x2","x1","y1","y2","TransitMap","props","changeType","selected","visibleClassString","colorScale","orderScale","setSearchValue","useState","tooltipData","setTooltipData","useDimensions","ref","x","y","width","height","useMemo","geometry","projection","geoMercator","scale","rotate","translate","path","geoPath","bounds","dx","dy","getBounds","Math","max","scaleProjection","routeBackground","key","id","d","stroke","strokeWidth","fill","routes","forEach","g","index","initIndex","focus","labelPositions","sortBy","features","f","scaleKey","color","order","center","centroid","getCenter","i","offsets","group","offset","offsetType","name","direction","rectWidth","size","rectHeight","length","flatCoordinates","flatDeep","arr","reduce","acc","val","concat","Array","isArray","slice","coordinates","Infinity","start","position","usedPositon","find","lp","splice","pos","console","log","push","labelPos","updateTooltip","datum","status","area","description","hoverLine","e","target","dataset","r","useEffect","displayRoutes","transform","className","data-route","strokeOpacity","pointerEvents","displayLabels","fontScale","scaleLinear","domain","range","clamp","font","floor","min","fillOpacity","cursor","fontSize","textAnchor","minScale","maxScale","showControls","controlsClass","btnClass","onClick","onTouchStart","onMouseOver","onMouseMove","style","borderColor","opacity","properties","PUB_RTE","warn","join","typesInOrder","scaleOrdinal","isNaN","parseInt","getSuggestionValue","suggestion","App","value","setValue","suggestions","setSuggestions","visibleGroups","setVisibleGroups","t","reverse","groups","nextGroups","background","alwaysRenderSuggestions","onSuggestionsFetchRequested","inputValue","getSuggestions","onSuggestionsClearRequested","renderSuggestion","isSelected","inputProps","placeholder","onChange","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79609598.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { feature } from 'topojson';\nimport sortBy from 'lodash.sortby';\nimport { scaleLinear } from 'd3-scale';\nimport { geoPath, geoMercator } from 'd3-geo';\nimport { radial } from 'd3-fisheye';\nimport useDimensions from 'react-use-dimensions';\nimport { MapInteractionCSS } from 'react-map-interaction';\n\nimport './styles.css';\n\n// Fall20Routeshape // Missing eliminated routes\n// Summer19Routeshape\nimport Winter19Routeshape from './Winter19Routeshape.json';\nimport RouteBackground from './RouteBackground.json';\nimport serviceChangeData from './ac-transit-service-cuts.json';\n\nconst thirtyThree = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.75);\n\nconst fourtySix = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.75);\n\nconst jay = radial()\n  .radius(2.5)\n  .distortion(1.5)\n  .smoothingRatio(0.25);\n\nconst fisheye = coordinate => fourtySix(thirtyThree(jay(coordinate)));\n\n// not using for now\nconst offsetGroups = [\n  // {\n  //   name: 'transbay',\n  //   routes: ['800', '707', '706', '703', '702', '701', 'E', 'Z', 'F', 'FS', 'G', 'CB', 'J', 'L', 'LA', 'NL', 'NX', 'NX1', 'NX2', 'NX4', 'P', 'V', 'W', 'B', 'C', 'H', 'NX3', 'NXC', 'O', 'OX', 'S', 'SB'],\n  //   direction: [-2, 4],\n  //   index: 0,\n  //   initIndex: 0,\n  // },\n  // {\n  //   name: 'sanpablo',\n  //   routes: ['72', '72M', '72R', '802'],\n  //   direction: [-4, 0],\n  //   index: 4,\n  //   initIndex: 4,\n  // },\n  // {\n  //   name: '46',\n  //   routes: ['46', '46L'],\n  //   direction: [0, 4],\n  //   index: 0,\n  //   initIndex: 0,\n  // },\n];\n\nconst manualOffsets = {\n  // 'B': { x: -0.25, y: -0.25 },\n  // 'NX1': { x: -0.375, y: 0.125 },\n  // 'NX3': { x: 0.5, y: 0 },\n  // '14': { x: -0.375, y: -0.25 },\n};\n\nexport const rename = {\n  '1': 'BRT/1',\n  // '1': 'BRT (1)',\n};\n\nconst serviceChanges = serviceChangeData.map(change => {\n  change.line = rename[change.line] || change.line;\n  change['change-15'] = change['change-15'].trim() === '' ? 'no change' : change['change-15'];\n  change['change-30'] = change['change-30'].trim() === '' ? 'no change' : change['change-30'];\n  return change;\n});\nconst noRouteFeatures = serviceChanges\n  .filter(change => change.line.toLowerCase().includes('flex'))\n  .map(change => ({\n    route: change.line,\n    changes: change,\n  }));\n\nconst unused = [];\nconst combinedRoutes = feature(RouteBackground, RouteBackground.objects['1']);\nconst acTransitRoutes = feature(Winter19Routeshape,  Winter19Routeshape.objects.Winter19Routeshape);\nacTransitRoutes.features = acTransitRoutes.features.map(f => {\n  f.route = rename[f.properties.PUB_RTE] || f.properties.PUB_RTE;\n  f.changes = serviceChanges.find(r => r.line === f.route);\n  if (!f.changes) {\n    unused.push(f.route);\n  }\n  return f;\n})\n.filter(f => f.changes); // hiding no info routes for now\nacTransitRoutes.features = acTransitRoutes.features.concat(noRouteFeatures);\n\nconsole.warn(`no information for: ${unused.join(', ')}`);\n\nfunction getCenter(path, geometry) {\n  const [x, y] = path.centroid(geometry);\n  return { x, y };\n};\n\nfunction getBounds(path, geometry) {\n  const bounds = path.bounds(geometry),\n    dx = bounds[1][0] - bounds[0][0],\n    y1 = bounds[0][1],\n    dy = bounds[1][1] - y1,\n    x = (bounds[0][0] + bounds[1][0]) / 2,\n    y = (y1 + bounds[1][1]) / 2;\n  return { dx, dy, x, y };\n};\n\nfunction scaleProjection(geometry, width, height) {\n  const projection = geoMercator().scale(1000).rotate([-11, 0]).translate([width / 2, height / 2]);\n  const path = geoPath().projection(projection);\n  const target = geometry;\n  const { dx, dy, x, y } = getBounds(path, target);\n  const scale = 0.9 / Math.max(dx / width, dy / height) || 1,\n    translate = [width / 2 - scale * x, height / 2 - scale * y];\n  return { projection, path, scale, translate, x, y, dx, dy, };\n};\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\nfunction flatDeep(arr, d = 1) {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n};\n\nfunction overlapping(box1, box2) {\n  return box1.x2 >= box2.x1 && box1.x1 <= box2.x2 && box1.y1 <= box2.y2 && box1.y2 >= box2.y1;\n}\n\nexport default function TransitMap(props) {\n  const { changeType, selected, visibleClassString, colorScale, orderScale, setSearchValue } = props;\n  const [tooltipData, setTooltipData] = useState();\n  const [ref, { x, y, width, height }] = useDimensions();\n\n  const { projection, path, translate, scale } = useMemo(() => (\n    width\n      ? scaleProjection(acTransitRoutes, width, height)\n      : { translate: [0, 0], scale: 0 }\n  ), [width, height]);\n\n  const routeBackground = useMemo(() => path ? (\n    <path\n      key='routeBackground'\n      id='routeBackground'\n      d={path(combinedRoutes)}\n      stroke='#121212'\n      // stroke='#333'\n      strokeWidth='1.5'\n      fill='none'\n    />\n  ) : null, [path]);\n\n  const routes = useMemo(() => {\n    offsetGroups.forEach(g => {\n      g.index = g.initIndex;\n    });\n\n    if (projection) {\n      thirtyThree.focus(projection([ -122.25074308326039, 37.79930415428206 ]));\n      fourtySix.focus(projection([ -122.19203753859007, 37.74994737608997 ]));\n      jay.focus(projection([ -122.39272304308822, 37.7851476342889 ]));\n    }\n\n    const labelPositions = [];\n    return width ? (\n      sortBy(\n        sortBy(\n          acTransitRoutes.features.map(f => {\n            f.scaleKey = f.changes ? f.changes[changeType].trim() : 'other';\n            f.color = colorScale(f.scaleKey);\n            f.order = orderScale(f.scaleKey);\n            f.path = path(f);\n            f.center = getCenter(path, f);\n            return f;\n          })\n        , f => -f.route)\n      , f => f.order)\n      .map((f, i) => {\n        const offsets = offsetGroups.filter(group => group.routes.includes(f.route));\n        if (offsets[0]) {\n          const offset = offsets[0];\n          f.offsetType = offset.name;\n          f.offset = {\n            x: offset.direction[0] * offset.index,\n            y: offset.direction[1] * offset.index,\n          };\n          offset.index++;\n        } else {\n          f.offsetType = 'default';\n          f.offset = {\n            x: 0,\n            y: 0,\n          };\n        }\n\n        if (f.geometry) {\n          const size = 0.18; // 0.19; //0.2; // 0.25;\n          // const size = 0.2;\n          const rectHeight = size / 3 * 4;\n          const rectWidth = Math.max(rectHeight, rectHeight / 2 * f.route.length);\n          const flatCoordinates = flatDeep(f.geometry.coordinates.slice(), Infinity);\n          f.start = fisheye(projection(flatCoordinates.slice(0, 2)));\n          // f.start = projection(flatCoordinates.slice(-2));\n          f.start[0] += f.offset.x / scale;\n          f.start[1] += f.offset.y / scale;\n          let position = f.start;\n          let usedPositon = labelPositions.find(lp => overlapping(lp, {\n            // x1: position[0] - size,\n            // y1: position[1],\n            // x2: position[0] + size,\n            // y2: position[1] + size,\n            x1: position[0] - rectWidth / 2,\n            y1: position[1],\n            x2: position[0] + rectWidth / 2,\n            y2: position[1] + rectHeight,\n          }));\n\n          if (manualOffsets[f.route]) {\n            position[0] += manualOffsets[f.route].x;\n            position[1] += manualOffsets[f.route].y;\n            // usedPositon = false;\n          }\n          \n          while (usedPositon) {\n            flatCoordinates.splice(0, 2);\n            let pos = f.start;\n            if (flatCoordinates.length >= 2) {\n              pos = fisheye(projection(flatCoordinates.slice(0, 2)));\n              pos[0] += f.offset.x / scale;\n              pos[1] += f.offset.y / scale;\n              usedPositon = labelPositions.find(lp => overlapping(lp, {\n                // x1: pos[0] - size,\n                // y1: pos[1],\n                // x2: pos[0] + size,\n                // y2: pos[1] + size,\n                x1: pos[0] - rectWidth / 2,\n                y1: pos[1],\n                x2: pos[0] + rectWidth / 2,\n                y2: pos[1] + rectHeight,\n              }));\n            } else {\n              console.log(`default: ${f.route}`);\n              usedPositon = false;\n            }\n            position = pos;\n            if (manualOffsets[f.route]) {\n              position[0] += manualOffsets[f.route].x / scale;\n              position[1] += manualOffsets[f.route].y / scale;\n              // usedPositon = false;\n            }\n          }\n\n          labelPositions.push({\n            // x1: position[0] - size,\n            // y1: position[1],\n            // x2: position[0] + size,\n            // y2: position[1] + size,\n            x1: position[0] - rectWidth / 2,\n            y1: position[1],\n            x2: position[0] + rectWidth / 2,\n            y2: position[1] + rectHeight,\n          });\n\n          f.labelPos = { x: position[0], y: position[1] };\n        }\n\n        return f;\n      })\n    ) : [];\n  }, [changeType, width, path, colorScale, orderScale, projection, scale]);\n\n  const updateTooltip = useMemo(() => (\n    function(datum) {\n      const { route, scaleKey, color, path, order, changes } = datum;\n      const status = scaleKey;\n      const { area, group, description } = changes;\n      setSearchValue(route);\n      setTooltipData({\n        route,\n        color,\n        path,\n        order,\n        area,\n        group,\n        description,\n        status,\n      });\n    }\n  ), [setSearchValue]);\n\n  useEffect(() => {\n    const datum = routes.find(r => r.route === selected);\n    if (datum) {\n      updateTooltip(datum);\n    } else {\n      setTooltipData(null);\n    }\n  }, [updateTooltip, selected, routes, x, y ]);\n\n  function hoverLine(e) {\n    const { target } = e;\n    const { dataset } = target;\n    const { route } = dataset;\n    const datum = routes.find(r => r.route === route);\n    if (datum) {\n      if (!tooltipData || tooltipData.route !== route) {\n        updateTooltip(datum);\n      }\n    }\n  }\n\n  const displayRoutes = useMemo(() => (\n    routes.map((r, i) => (\n      <g\n        key={r.route}\n        id={r.route}\n        transform={`translate(${r.offset.x / scale}, ${r.offset.y / scale})`}\n        className={`route ${r.scaleKey}`}\n      >\n        <path\n          data-route={r.route}\n          className='highlight'\n          d={r.path}\n          stroke={r.color}\n          fill='none'\n          strokeWidth={1.5 / scale}\n          strokeOpacity={0.5}\n          pointerEvents='none'\n        />\n      </g>\n    ))\n  ), [routes, scale]);\n\n  const displayLabels = useMemo(() => {\n    const fontScale = scaleLinear()\n    .domain([480, 1440])\n    // .domain([480, 960])\n    // .range([6, 18])\n    // .range([7, 12])\n    // .range([7, 14])\n    .range([8, 18])\n    // .range([9, 18])\n    .clamp(true);\n    const font = Math.floor(fontScale(Math.min(width, height))) || 9;\n    const rectHeight = font / 3 * 4;\n    return routes.filter(r => r.labelPos).map((r, i) => {\n      const rectWidth = Math.max(rectHeight, rectHeight / 2 * r.route.length);\n      return (\n        <g\n          pointerEvents='none'\n          className={`${r.scaleKey}`}\n          key={`${r.route}-label`}\n        >\n          <g transform={`translate(${r.labelPos.x}, ${r.labelPos.y})`}>\n            <rect\n              data-route={r.route}\n              className='target'\n              // x={-size / scale}\n              // width={size * 2 / scale}\n              // x={-size * 0.75 / scale}\n              // width={size * 1.5 / scale}\n              x={(-rectWidth / 2) / scale}\n              width={rectWidth / scale}\n              // x={(-size / 2) / scale}\n              // width={size / scale}\n              height={rectHeight / scale}\n              fill='#121212'\n              stroke={r.color}\n              strokeWidth={1 / scale}\n              fillOpacity={0.75}\n              cursor='pointer'\n            />\n            <text\n              fill='white'\n              dy={(font - 0.5) / scale}\n              fontSize={font / scale}\n              textAnchor='middle'\n              pointerEvents='none'\n            >\n              {r.route}\n            </text>\n          </g>\n        </g>\n      )\n    })\n  }, [routes, width, height, scale]);\n\n  return (\n    <div ref={ref} className=\"TransitMap\">\n      <MapInteractionCSS\n        minScale={1}\n        maxScale={10}\n        showControls={true}\n        controlsClass='controls'\n        btnClass='control'\n      >\n        <svg className={visibleClassString} width={width} height={height}>\n          <rect\n            width={width}\n            height={height}\n            fill='transparent'\n            onClick={() => tooltipData ? setTooltipData(null) : {}}\n            onTouchStart={() => tooltipData ? setTooltipData(null) : {}}\n            onMouseOver={() => tooltipData ? setTooltipData(null) : {}}\n          />\n          <g transform={`translate(${translate}) scale(${scale})`}>\n            <g onMouseMove={hoverLine} onTouchStart={hoverLine}>\n              {routeBackground}\n              <g className='routes'>\n                {displayRoutes}\n              </g>\n              <g className={`labels ${tooltipData ? 'dim' : ''}`}>\n                {displayLabels}\n              </g>\n            </g>\n            {tooltipData ? (\n              <g\n                key={`${tooltipData.route}-highlight`}\n                id={`${tooltipData.route}-highlight`}\n                className='spotlight'\n                pointerEvents='none'\n              >\n                <path\n                  d={tooltipData.path}\n                  stroke='white'\n                  fill='none'\n                  strokeWidth={6 / scale}\n                  strokeOpacity='1'\n                />\n                <path\n                  d={tooltipData.path}\n                  stroke={tooltipData.color}\n                  fill='none'\n                  strokeWidth={3 / scale}\n                  strokeOpacity='1'\n                />\n              </g>\n            ) : null}\n          </g>\n        </svg>\n      </MapInteractionCSS>\n      <div\n        className='tooltip'\n        style={{ borderColor: tooltipData ? tooltipData.color : 'white', opacity: tooltipData ? 1 : 0 }}\n      >\n        <div className='column left'>\n          <div className='row'>\n            <div className='route left'>\n              <span>\n                {tooltipData ? tooltipData.route : ''}\n              </span>\n            </div>\n            <div className='area right'>\n              <span>\n                {tooltipData ? tooltipData.area : ''}\n              </span>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='status left'>\n              <span>\n                {tooltipData ? tooltipData.status : ''}\n              </span>\n            </div>\n            <div className='group right'>\n              <span>\n                {tooltipData ? tooltipData.group : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className='column right'>\n          <div className='row description'>\n            <div>\n              <span>\n                {tooltipData ? tooltipData.description : ''}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div\n          className='close'\n          style={{ borderColor: tooltipData ? tooltipData.color : 'white' }}\n          onClick={() => setTooltipData(null)}\n        >\n          <div>x</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { scaleOrdinal } from 'd3-scale';\nimport sortBy from 'lodash.sortby';\nimport Autosuggest from 'react-autosuggest';\nimport useDimensions from 'react-use-dimensions';\n\nimport TransitMap, { rename } from './TransitMap'\nimport serviceChanges from './TransitMap/ac-transit-service-cuts.json';\n\nimport './App.css';\n\nconst typesInOrder = ['other', 'increased', 'no change', 'modified', 'reduced', 'eliminated'];\n\nconst colorScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range(['#a8aaac', '#008e9b', '#10684e', '#ffc75f', '#ff9671', '#CC0000']);\n\nconst orderScale = scaleOrdinal()\n  .domain(typesInOrder)\n  .range([1, 2, 3, 4, 5, 6]);\n\nconst changeType = 'change-30';\nconst routes = sortBy(\n  sortBy(\n    serviceChanges.map(route => {\n      route.route = rename[route.line] || route.line;\n      route.scaleKey = route[changeType].trim();\n      route.scaleKey = route.scaleKey === '' ? 'no change' : route.scaleKey;\n      route.color = colorScale(route.scaleKey);\n      route.order = orderScale(route.scaleKey);\n      return route;\n    }).filter(change => change.line !== '40-duplicate')\n  ,r => isNaN(parseInt(r.route)) ? r.route : parseInt(r.route))\n,r => -r.order);\n\nconst getSuggestions = (value, visibleGroups) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? routes : routes.filter(route => route.route.toLowerCase().includes(inputValue));\n};\n\nconst getSuggestionValue = suggestion => suggestion.route;\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState(routes);\n  const [visibleGroups, setVisibleGroups] = useState(typesInOrder);\n  const [ref, { width }] = useDimensions();\n\n  function updateGroups(id) {\n    setVisibleGroups(groups => {\n      if (groups.includes(id)) {\n        const nextGroups = groups.slice().filter(group => group !== id);\n        return nextGroups.length ? nextGroups : [];\n      } else {\n        return groups.concat([id]);\n      }\n    });\n  }\n\n  const renderSuggestion = (suggestion) => {\n    const isSelected = suggestion.route === value;\n    return (\n      <div\n        className={`suggestion ${isSelected ? 'selected' : ''}`}\n        data-route={suggestion.route}\n        style={{ borderColor: suggestion.color }}\n      >\n        <div className='label'>\n          {suggestion.route}\n        </div>\n        <div className='status'>\n          {suggestion.scaleKey}\n        </div>\n      </div>\n    );\n  };\n\n  const visibleClassString = visibleGroups.join(' ');\n\n  return (\n    <div ref={ref} className=\"App\">\n      <div className='panel'>\n        <div className='headings'>\n          <div className='title'>\n            Proposed AC Transit Service Cuts \n          </div>\n          <div className='subtitle'>\n            Fall 2020 (30% Scenario)\n          </div>\n        </div>\n        <div className='legend'>\n          {typesInOrder.filter(t => t !== 'other').reverse().map(t => (\n            <div\n              key={t}\n              className='item'\n              onClick={() => updateGroups(t)}\n              style={{ opacity: visibleGroups.includes(t) ? 1 : 0.25 }}\n            >\n              <div className='swatch' style={{ background: colorScale(t) }}/>\n              <div className='label'>\n                {t}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div\n          className='search'\n          onMouseMove={e => {\n            const { target } = e;\n            const { dataset } = target;\n            const { route } = dataset;\n            if (route) {\n              setValue(route);\n            }\n          }}\n        >\n          <Autosuggest\n            alwaysRenderSuggestions={width > 768}\n            suggestions={suggestions.filter(route => visibleGroups.includes(route.scaleKey))}\n            onSuggestionsFetchRequested={({ value }) => setSuggestions(getSuggestions(value, visibleGroups))}\n            onSuggestionsClearRequested={() => {}}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={suggestion => renderSuggestion(suggestion)}\n            inputProps={{\n              placeholder: 'Search',\n              value,\n              onChange: (e, { newValue }) => setValue(newValue),\n            }}\n          />\n        </div>\n      </div>\n      <TransitMap\n        changeType={changeType}\n        selected={value}\n        visibleClassString={visibleClassString}\n        colorScale={colorScale}\n        orderScale={orderScale}\n        setSearchValue={setValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}